name: Run Tests

on:
  push:
    branches: [main, development]
  pull_request:
    branches:
      - '*'
  # Run weekly on Monday
  schedule:
    - cron: 0 0 * * 1

jobs:
  test-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        r: [4.2.0, 4.3.0, 4.4.0]
        os: ['macos-latest', 'windows-latest', 'ubuntu-latest']

    name: R version ${{ matrix.r }} check on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r }}
      - uses: r-lib/actions/setup-r-dependencies@v2
      - uses: r-lib/actions/setup-tinytex@v2
        env:
          TINYTEX_INSTALLER: TinyTeX

      - name: Install dependencies
        run: |
          Rscript -e 'pak::local_install(dependencies = FALSE)'

      - name: Build tar & CRAN check for Mac & Ubuntu
        if: ${{ matrix.os  == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
        run: |
          R CMD build .
          R CMD check --as-cran *vswift*.tar.gz
        shell: bash

      - name: Build tar & CRAN check for Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          R CMD build --no-build-vignettes .
          for %%i in (vswift*.tar.gz) do R CMD check --no-manual --as-cran %%i
        shell: cmd

      - name: Run MacOS and get coverage
        if: ${{ matrix.os == 'macos-latest' && matrix.r == '4.4.0' }}
        run: |
          Rscript -e 'install.packages("xml2"); cov <- covr::package_coverage(); covr::to_cobertura(cov, filename = "coverage.xml")'
        shell: bash
      
      - name: Upload coverage to Codecov
        if: ${{ matrix.os == 'macos-latest' && matrix.r == '4.4.0' }}
        uses: codecov/codecov-action@v5.4.2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./pkg/vswift/coverage.xml
